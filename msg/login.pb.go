// Code generated by protoc-gen-go.
// source: login.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LoginRes_Code int32

const (
	LoginRes_YES       LoginRes_Code = 0
	LoginRes_NO        LoginRes_Code = 1
	LoginRes_NOT_EXIST LoginRes_Code = 2
	LoginRes_PASS_ERR  LoginRes_Code = 3
)

var LoginRes_Code_name = map[int32]string{
	0: "YES",
	1: "NO",
	2: "NOT_EXIST",
	3: "PASS_ERR",
}
var LoginRes_Code_value = map[string]int32{
	"YES":       0,
	"NO":        1,
	"NOT_EXIST": 2,
	"PASS_ERR":  3,
}

func (x LoginRes_Code) String() string {
	return proto.EnumName(LoginRes_Code_name, int32(x))
}
func (LoginRes_Code) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0} }

// 登录请求
type Login struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *Login) Reset()                    { *m = Login{} }
func (m *Login) String() string            { return proto.CompactTextString(m) }
func (*Login) ProtoMessage()               {}
func (*Login) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// 登录响应
type LoginRes struct {
	Code LoginRes_Code `protobuf:"varint,1,opt,name=code,enum=msg.LoginRes_Code" json:"code,omitempty"`
}

func (m *LoginRes) Reset()                    { *m = LoginRes{} }
func (m *LoginRes) String() string            { return proto.CompactTextString(m) }
func (*LoginRes) ProtoMessage()               {}
func (*LoginRes) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func init() {
	proto.RegisterType((*Login)(nil), "msg.Login")
	proto.RegisterType((*LoginRes)(nil), "msg.LoginRes")
	proto.RegisterEnum("msg.LoginRes_Code", LoginRes_Code_name, LoginRes_Code_value)
}

func init() { proto.RegisterFile("login.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc9, 0x4f, 0xcf,
	0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xce, 0x2d, 0x4e, 0x57, 0x32, 0xe7, 0x62,
	0xf5, 0x01, 0x89, 0x09, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a,
	0x70, 0x06, 0x81, 0xd9, 0x42, 0x52, 0x5c, 0x1c, 0x05, 0x89, 0xc5, 0xc5, 0xe5, 0xf9, 0x45, 0x29,
	0x12, 0x4c, 0x60, 0x71, 0x38, 0x5f, 0x29, 0x83, 0x8b, 0x03, 0xac, 0x31, 0x28, 0xb5, 0x58, 0x48,
	0x8d, 0x8b, 0x25, 0x39, 0x3f, 0x05, 0xa2, 0x97, 0xcf, 0x48, 0x48, 0x0f, 0x68, 0xb0, 0x1e, 0x4c,
	0x52, 0xcf, 0x19, 0x28, 0x13, 0x04, 0x96, 0x57, 0x32, 0xe1, 0x62, 0x01, 0xf1, 0x84, 0xd8, 0xb9,
	0x98, 0x23, 0x5d, 0x83, 0x05, 0x18, 0x84, 0xd8, 0xb8, 0x98, 0xfc, 0xfc, 0x05, 0x18, 0x85, 0x78,
	0xb9, 0x38, 0xfd, 0xfc, 0x43, 0xe2, 0x5d, 0x23, 0x3c, 0x83, 0x43, 0x04, 0x98, 0x84, 0x78, 0xb8,
	0x38, 0x02, 0x1c, 0x83, 0x83, 0xe3, 0x5d, 0x83, 0x82, 0x04, 0x98, 0x93, 0xd8, 0xc0, 0xce, 0x35,
	0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x03, 0x50, 0x5f, 0x1c, 0xbd, 0x00, 0x00, 0x00,
}
